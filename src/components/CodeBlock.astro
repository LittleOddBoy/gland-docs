---
export interface Props {
  lang?: string;
  lineNumbers?: boolean;
  highlightLines?: string;
  filename?: string;
}

const {
  lang = 'javascript',
  lineNumbers = false,
  highlightLines = '',
  filename = ''
} = Astro.props;
---

<div class="code-block">
  {filename && (
    <div class="filename">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M14 2H6C5.46957 2 4.96086 2.21071 4.58579 2.58579C4.21071 2.96086 4 3.46957 4 4V20C4 20.5304 4.21071 21.0391 4.58579 21.4142C4.96086 21.7893 5.46957 22 6 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V8L14 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M14 2V8H20" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      {filename}
    </div>
  )}

  <div class="code-container">
    <pre class={`language-${lang} ${lineNumbers ? 'line-numbers' : ''}`} data-line={highlightLines}>
      <code class={`language-${lang}`}>
        <slot />
      </code>
    </pre>

    <button class="copy-button" aria-label="Copy code">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M8 17.929H6C5.46957 17.929 4.96086 17.7183 4.58579 17.3432C4.21071 16.9681 4 16.4594 4 15.929V5.929C4 5.39857 4.21071 4.88986 4.58579 4.51479C4.96086 4.13971 5.46957 3.929 6 3.929H14C14.5304 3.929 15.0391 4.13971 15.4142 4.51479C15.7893 4.88986 16 5.39857 16 5.929V7.929" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M8 15.929H18C18.5304 15.929 19.0391 16.1397 19.4142 16.5148C19.7893 16.8899 20 17.3986 20 17.929V19.929C20 20.4594 19.7893 20.9681 19.4142 21.3432C19.0391 21.7183 18.5304 21.929 18 21.929H10C9.46957 21.929 8.96086 21.7183 8.58579 21.3432C8.21071 20.9681 8 20.4594 8 19.929V15.929Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
  </div>
</div>

<style>
  .code-block {
    position: relative;
    margin: 1.5rem 0;
    border-radius: 12px;
    overflow: hidden;
    background: var(--surface-alt);
    border: 1px solid var(--border);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .filename {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    font-size: 0.875rem;
    font-family: 'Fira Code', monospace;
    color: var(--text-muted);
    border-bottom: 1px solid var(--border);
  }

  .code-container {
    position: relative;
  }

  pre[class*="language-"] {
    margin: 0;
    padding: 1.25rem;
    overflow-x: auto;
    background: transparent !important;
  }

  code[class*="language-"] {
    font-family: 'Fira Code', monospace;
    font-size: 0.9rem;
    line-height: 1.5;
    tab-size: 2;
  }

  .copy-button {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background: rgba(100, 108, 255, 0.1);
    border: none;
    border-radius: 6px;
    padding: 0.5rem;
    cursor: pointer;
    color: var(--text-muted);
    transition: all 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .copy-button:hover {
    background: rgba(100, 108, 255, 0.2);
    color: var(--primary);
  }

  .copy-button.copied {
    background: rgba(100, 108, 255, 0.3);
    color: var(--primary);
  }

  /* Line numbers */
  .line-numbers.line-numbers .line-numbers-rows {
    border-right: 1px solid var(--border);
    padding-right: 1rem;
  }

  /* Highlight lines */
  .line-highlight {
    background: rgba(100, 108, 255, 0.1);
    margin-left: -1.25rem;
    margin-right: -1.25rem;
    padding-left: 1rem;
    border-left: 3px solid var(--primary);
  }

  @media (max-width: 768px) {
    pre[class*="language-"] {
      padding: 1rem;
    }

    code[class*="language-"] {
      font-size: 0.8rem;
    }
  }
</style>

<script is:inline>
  document.querySelectorAll('.copy-button').forEach(button => {
    button.addEventListener('click', async () => {
      const code = button.parentElement.querySelector('code').textContent;

      try {
        await navigator.clipboard.writeText(code);
        button.classList.add('copied');
        button.innerHTML = `
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        `;

        setTimeout(() => {
          button.classList.remove('copied');
          button.innerHTML = `
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8 17.929H6C5.46957 17.929 4.96086 17.7183 4.58579 17.3432C4.21071 16.9681 4 16.4594 4 15.929V5.929C4 5.39857 4.21071 4.88986 4.58579 4.51479C4.96086 4.13971 5.46957 3.929 6 3.929H14C14.5304 3.929 15.0391 4.13971 15.4142 4.51479C15.7893 4.88986 16 5.39857 16 5.929V7.929" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path d="M8 15.929H18C18.5304 15.929 19.0391 16.1397 19.4142 16.5148C19.7893 16.8899 20 17.3986 20 17.929V19.929C20 20.4594 19.7893 20.9681 19.4142 21.3432C19.0391 21.7183 18.5304 21.929 18 21.929H10C9.46957 21.929 8.96086 21.7183 8.58579 21.3432C8.21071 20.9681 8 20.4594 8 19.929V15.929Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          `;
        }, 2000);
      } catch (err) {
        console.error('Failed to copy code: ', err);
      }
    });
  });
</script>